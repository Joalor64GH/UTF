import flixel.FlxSprite;
import utf.backend.AssetPaths;
import utf.objects.battle.Monster;
import flixel.FlxG;

class UndyneEx extends Monster
{
	var legs:FlxSprite;
	var pants:FlxSprite;
	var torso:FlxSprite;
	var larm:FlxSprite;
	var rarm:FlxSprite;
	var head:FlxSprite;
	var hair:FlxSprite;
	var beam:FlxSprite;
	var beamtimer:Int = 0;

	public function new():Void
	{
		super('undyne-ex');

		monsterName = 'Undyne The Undying';
		monsterHp = 23000;
		monsterMaxHp = 23000;
		monsterAttack = 12;
		monsterDefense = 5;
		monsterXpReward = 0;
		monsterGoldReward = 0;

		legs = new FlxSprite(78, 154, AssetPaths.sprite('undyne_anim/legs'));
		add(legs);

		pants = new FlxSprite(legs.x, legs.y - 34, AssetPaths.sprite('undyne_anim/pants'));
		pants.origin.set(pants.frameWidth * 0.6, pants.frameHeight * 0.8);
		add(pants);

		torso = new FlxSprite(52, 56, AssetPaths.sprite('undyne_anim/torso'));
		torso.origin.set(torso.frameWidth * 0.15, torso.frameHeight * 0.6);
		add(torso);

		larm = new FlxSprite(-58, -140, AssetPaths.sprite('undyne_anim/larm'));
		add(larm);

		rarm = new FlxSprite(48, -175, AssetPaths.sprite('undyne_anim/rarm'));
		add(rarm);

		hair = new FlxSprite(-12, -182, AssetPaths.sprite('undyne_anim/hair'));
		hair.origin.set(hair.frameWidth * 0.92, hair.frameHeight * 0.02);
		add(hair);

		head = new FlxSprite(2, hair.y + 22, AssetPaths.sprite('undyne_anim/face'));
		add(head);

		beam = new FlxSprite(9, 0, AssetPaths.sprite('undyne_anim/beam'));
		beam.origin.set(beam.frameWidth * 0, beam.frameHeight * 0.5);
		beam.alpha = 0;
		add(beam);

		screenCenter();
	}

	public override function update(elapsed:Float):Void
	{
		(FlxG.game.ticks / 1000) += elapsed;

		super.update(elapsed);

		pants.angle = Math.sin((FlxG.game.ticks / 1000) * 6.5) * 3;
		pants.centerOffsets();
		pants.offset.y += (Math.sin(-(FlxG.game.ticks / 1000) * 6.5));

		torso.angle = -Math.sin((FlxG.game.ticks / 1000) * 6.5) * 4;

		head.centerOffsets();
		head.offset.y += (Math.sin(-(FlxG.game.ticks / 1000) * 6.5)) * 3;

		rarm.centerOffsets();
		rarm.offset.x += Math.sin(-(FlxG.game.ticks / 1000) * 6.5 * 2) * 4;
		rarm.offset.y += (Math.sin(-(FlxG.game.ticks / 1000) * 6.5)) * 7;

		larm.centerOffsets();
		larm.offset.x += Math.sin((FlxG.game.ticks / 1000) * 6.5) * 5;
		larm.offset.y += Math.sin(-(FlxG.game.ticks / 1000) * 6.5) * 5;

		hair.angle = 60 - (Math.sin((FlxG.game.ticks / 1000) * 6.5) * 10);
		hair.y = head.y + 22;

		beam.angle = Math.sin((FlxG.game.ticks / 1000) * 3) * 35;

		if (beamtimer % 150 == 0)
		{
			beam.alpha = 1;
			beam.scale.x = 0.5;
		}

		if (beam.alpha > 0)
		{
			beam.alpha -= 0.015;
			beam.scale.x += 0.05;
		}

		beamtimer++;
	}
}
