import flixel.math.FlxMath;
import flixel.FlxG;
import utf.Paths;
import utf.objects.room.Object;

class RedactedAObject extends Object
{
	private var dist:Int = 0;

	public function new():Void
	{
		super('redacted_a');

		objectInteractable = true;

		loadGraphic(Paths.sprite(objectID));
		scale.set(2, 2);
		updateHitbox();

		immovable = true;
		solid = true;
	}

	public override function update(elapsed:Float):Void
	{
		if (FlxG.state.chara != null)
		{
			// Use `super` instead of `this`?
			dist = FlxMath.distanceBetween(super, FlxG.state.chara);

			if (dist < 120)
			{
				var disto:Float = 60 / (dist + 1);

				if (disto > 1)
					disto = 1;

				this.alpha = disto;
			}
			else
				this.alpha = 0;
		}

		super.update(elapsed);
	}

	public override function interact():Void
	{
		if (FlxG.state.chara != null)
			FlxG.state.chara.characterControllable = false;

		objectInteractable = false;

		FlxG.state.startDialogue([{typer: 'redacted_a', text: '* [redacted]'}], function():Void
		{
			if (FlxG.state.chara != null)
				FlxG.state.chara.characterControllable = true;

			objectInteractable = true;
		});
	}
}
