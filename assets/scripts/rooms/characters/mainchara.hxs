import flixel.FlxG;
import utf.backend.AssetPaths;
import utf.backend.Global;
import utf.input.Controls;
import utf.objects.room.Chara;

class MainCharaCharacter extends Chara
{
	public function new():Void
	{
		super('mainchara');

		frames = AssetPaths.spritesheet('f_mainchara');
		scale.set(2, 2);
		updateHitbox();

		animation.addByPrefix('down', 'f_maincharad', 6, false);
		animation.addByPrefix('right', 'f_maincharar', 6, false);
		animation.addByPrefix('up', 'f_maincharau', 6, false);
		animation.addByPrefix('left', 'f_maincharal', 6, false);

		switch (Global.facing)
		{
			case 0:
				animation.play('down');
			case 1:
				animation.play('right');
			case 2:
				animation.play('up');
			case 3:
				animation.play('left');
		}

		animation.finish();

		initializeHitbox(width, Math.round(height * 0.36));
	}

	public override function update(elapsed:Float):Void
	{
		if (characterControllable)
		{
			if (Controls.pressed('down'))
			{
				characterHitbox.velocity.y = 180;

				#if debug
				if (Controls.pressed('cancel'))
					characterHitbox.velocity.y = 300;
				#end

				if (!Controls.anyPressed(['right', 'left']))
					animation.play('down');
			}
			else if (Controls.pressed('up'))
			{
				characterHitbox.velocity.y = -180;

				#if debug
				if (Controls.pressed('cancel'))
					characterHitbox.velocity.y = -300;
				#end

				if (!Controls.anyPressed(['right', 'left']))
					animation.play('up');
			}

			if (Controls.pressed('right'))
			{
				characterHitbox.velocity.x = 180;

				#if debug
				if (Controls.pressed('cancel'))
					characterHitbox.velocity.x = 300;
				#end

				animation.play('right');
			}
			else if (Controls.pressed('left'))
			{
				characterHitbox.velocity.x = -180;

				#if debug
				if (Controls.pressed('cancel'))
					characterHitbox.velocity.x = -300;
				#end

				animation.play('left');
			}

			if (Controls.anyJustReleased(['down', 'up', 'right', 'left']))
			{
				characterHitbox.velocity.set();

				animation.finish();
			}
		}
		else
		{
			characterHitbox.velocity.set();

			animation.finish();
		}

		super.update(elapsed);
	}
}
